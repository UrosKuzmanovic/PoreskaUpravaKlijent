/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import communication.KomunikacijaSaServerom;
import domen.Obveznik;
import domen.Racun;
import domen.Transakcija;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Ookee
 */
public class PreknjizavanjeForm extends javax.swing.JFrame {

    private Obveznik obveznik;
    private RacunForm rf;

    /**
     * Creates new form PreknjizavanjeForm
     */
    public PreknjizavanjeForm(Obveznik o, RacunForm rf) {
        initComponents();
        addButtons();
        obveznik = o;
        this.rf = rf;
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblImePrezime = new javax.swing.JLabel();
        rbtnPreknjizavanje = new javax.swing.JRadioButton();
        rbtnPovracaj = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        cmbSaRacuna = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        lblStanje1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblStanje2 = new javax.swing.JLabel();
        cmbNaRacun = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIznos = new javax.swing.JTextField();
        btnIzvrsiTransakciju = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblImePrezime.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblImePrezime.setText("Ime i prezime");

        rbtnPreknjizavanje.setText("Preknjižavanje na drugi račun");

        rbtnPovracaj.setText("Povraćaj pretplate");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Sa računa:");

        cmbSaRacuna.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Stanje:");

        lblStanje1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("Stanje:");

        lblStanje2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        cmbNaRacun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("Na račun:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Iznos:");

        btnIzvrsiTransakciju.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnIzvrsiTransakciju.setText("Izvrši transakciju");
        btnIzvrsiTransakciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzvrsiTransakcijuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImePrezime)
                            .addComponent(jLabel3)
                            .addComponent(cmbSaRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtnPreknjizavanje)
                                    .addComponent(rbtnPovracaj)
                                    .addComponent(jLabel4)))
                            .addComponent(lblStanje1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIznos))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(cmbNaRacun, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStanje2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(btnIzvrsiTransakciju, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rbtnPreknjizavanje)
                    .addComponent(lblImePrezime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnPovracaj)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSaRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStanje1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbNaRacun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStanje2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIznos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzvrsiTransakciju, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzvrsiTransakcijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzvrsiTransakcijuActionPerformed
        double iznos;
        try {
            iznos = Double.parseDouble(txtIznos.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Molim Vas unesite samo brojeve u iznos.");
            return;
        }
        if (rbtnPreknjizavanje.isSelected()) {
            Racun r1 = (Racun) cmbSaRacuna.getSelectedItem();
            Racun r2 = (Racun) cmbNaRacun.getSelectedItem();
            if (r1 == null || r2 == null) {
                JOptionPane.showMessageDialog(this, "Odaberite račune za preknjižavanje.");
                return;
            } else if (r1.getRacun().getBrRacuna() == r2.getRacun().getBrRacuna()) {
                JOptionPane.showMessageDialog(this, "Odaberite različite račune za preknjižavanje.");
                return;
            } else if (r1.getStanje() < iznos) {
                JOptionPane.showMessageDialog(this, "Nemate dovoljno sredstava na računu '" + r1.getRacun().getNaziv() + "' za preknjižavanje.");
                return;
            }
            String opis = "Preknjižavanje sa računa '" + r1.getRacun().getNaziv() + "' na račun '" + r2.getRacun().getNaziv() + "'";
            // preknjizavanje
            Transakcija t1 = new Transakcija(0, iznos, new Date(), opis, r1);
            Transakcija t2 = new Transakcija(0, iznos, new Date(), opis, r2);
            r1.setStanje(r1.getStanje() - iznos);
            r2.setStanje(r2.getStanje() + iznos);
            ArrayList<Object> listaObj = new ArrayList<>();
            listaObj.add(t1);
            listaObj.add(t2);
            listaObj.add(r1);
            listaObj.add(r2);
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(konstante.Konstante.PREKNJIZAVANJE_PRETPLATE);
            kz.setParametar(listaObj);
            ServerskiOdgovor so;
            try {
                KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
                so = KomunikacijaSaServerom.getInstance().primiOdgovor();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Došlo je do greške prilikom povezivanja.");
                return;
            }
            if (so.getPoruka().equals("1")) {
                JOptionPane.showMessageDialog(this, "Pretplata je uspešno preknjižena.");
                rf.osveziRacune();
                this.dispose();
                return;
            }
        } else if (rbtnPovracaj.isSelected()) {
            Racun r = (Racun) cmbSaRacuna.getSelectedItem();
            if (r == null) {
                JOptionPane.showMessageDialog(this, "Odaberite račune za povraćaj pretplate.");
                return;
            } else if (r.getStanje() < iznos) {
                JOptionPane.showMessageDialog(this, "Nemate dovoljno sredstava na računu '" + r.getRacun().getNaziv() + "' za preknjižavanje.");
                return;
            }
            // povracaj
            String opis = "Povraćaj pretplate sa računa '" + r.getRacun().getNaziv() + "'";
            Transakcija t = new Transakcija(0, iznos, new Date(), opis, r);
            r.setStanje(r.getStanje() - iznos);
            ArrayList<Object> listaObj = new ArrayList<>();
            listaObj.add(t);
            listaObj.add(r);
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(konstante.Konstante.POVRATAK_PRETPLATE);
            kz.setParametar(listaObj);
            ServerskiOdgovor so;
            try {
                KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
                so = KomunikacijaSaServerom.getInstance().primiOdgovor();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Došlo je do greške prilikom povezivanja.");
                return;
            }
            if (so.getPoruka().equals("1")) {
                JOptionPane.showMessageDialog(this, "Pretplata je uspešno povraćena.");
                rf.osveziRacune();
                this.dispose();
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Odaberite jednu od opcija za preknjižavanje.");
            return;
        }
    }//GEN-LAST:event_btnIzvrsiTransakcijuActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzvrsiTransakciju;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbNaRacun;
    private javax.swing.JComboBox cmbSaRacuna;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblImePrezime;
    private javax.swing.JLabel lblStanje1;
    private javax.swing.JLabel lblStanje2;
    private javax.swing.JRadioButton rbtnPovracaj;
    private javax.swing.JRadioButton rbtnPreknjizavanje;
    private javax.swing.JTextField txtIznos;
    // End of variables declaration//GEN-END:variables

    private void addButtons() {
        buttonGroup1.add(rbtnPreknjizavanje);
        buttonGroup1.add(rbtnPovracaj);
    }

    private void srediFormu() {
        lblImePrezime.setText(obveznik.getIme() + " " + obveznik.getPrezime());
        popuniCombobox(cmbSaRacuna);
        popuniCombobox(cmbNaRacun);
        cmbNaRacun.setSelectedIndex(1);
        lblStanje1.setText(((Racun) cmbSaRacuna.getItemAt(0)).getStanje() + " rsd");
        lblStanje2.setText(((Racun) cmbNaRacun.getItemAt(1)).getStanje() + " rsd");
        cmbSaRacuna.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Racun r = (Racun) cmbSaRacuna.getSelectedItem();
                lblStanje1.setText(r.getStanje() + " rsd");
            }
        });
        cmbNaRacun.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Racun r = (Racun) cmbNaRacun.getSelectedItem();
                lblStanje2.setText(r.getStanje() + " rsd");
            }
        });
    }

    private void popuniCombobox(JComboBox comboBox) {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(konstante.Konstante.VRATI_OBVEZNIKOVE_RACUNE);
        kz.setParametar(new Racun(obveznik, null, 0));
        ServerskiOdgovor so;
        try {
            KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
            so = KomunikacijaSaServerom.getInstance().primiOdgovor();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške prilikom povezivanja.");
            return;
        }
        ArrayList<Racun> listaRacuna = (ArrayList<Racun>) so.getOdogovor();
        comboBox.removeAllItems();
        for (Racun racun : listaRacuna) {
            comboBox.addItem(racun);
        }
    }
}
